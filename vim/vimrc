" vim:set ts=2 sts=2 sw=2 expandtab:

set nocompatible

filetype off

" -------
" Plugins
" -------

" Install vim-plug if needed.
if !filereadable(expand('~/.vim/autoload/plug.vim'))
  exec 'silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs '.
        \ 'https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
endif

call plug#begin('~/.vim/plugged')
  Plug 'pbrisbin/vim-mkdir'           " Automatically create non-existent directories when saving.
  Plug 'tpope/vim-repeat'             " 'repeat.vim: enable repeating supported plugin maps with .'.
  Plug 'thinca/vim-quickrun'          " '*quickrun* is Vim plugin to execute whole/part of editing file'. Provides :QuickRun.
  Plug 'airblade/vim-rooter'          " 'Changes Vim working directory to project root (identified by presence of known directory or file)'.
  Plug 'moll/vim-bbye'                " 'Delete buffers and close files in Vim without closing your windows.' Use with :Bdelete and :Bwipeout.
  Plug 'ludovicchabant/vim-gutentags' " 'A Vim plugin that manages your tag files.'
  Plug 'tpope/vim-eunuch'             " 'Vim sugar for the UNIX shell commands that need it the most'. Provides :Delete, :Move, :Rename, :SudoWrite, etc.
  Plug 'dyng/ctrlsf.vim'              " 'An ack.vim alternative mimics Ctrl-Shift-F on Sublime Text 2'.
  Plug 'ctrlpvim/ctrlp.vim'           " 'Fuzzy file, buffer, mru, tag, etc finder'.
  Plug 'FelikZ/ctrlp-py-matcher'      " Better matching for ctrlp.
  Plug 'tpope/vim-sleuth'             " Heuristically set buffer options (shiftwidth, expandtab, etc.).
  Plug 'Raimondi/delimitMate'         " 'Provides insert mode auto-completion for quotes, parens, brackets, etc'
  Plug 'tpope/vim-surround'           " 'surround.vim: quoting/parenthesizing made simple'. Provides ds, cs, yss and visual S.
  Plug 'tomtom/tcomment_vim'          " 'tcomment provides easy to use, file-type sensible comments for Vim.' Provides gcc, gc{motion}.
  Plug 'vim-scripts/matchit.zip'      " Extended % matching for HTML, LaTeX, and many other languages.
  Plug 'machakann/vim-swap'           " Reorder/swap delimited items. Adds g<, g>, gs.
  Plug 'shawncplus/phpcomplete.vim'   " Improved PHP omnicompletion.
  Plug 'groenewege/vim-less'          " Syntax support for LESS.
  Plug 'mtdl9/vim-log-highlighting'   " Provides syntax highlighting for generic log files.
  Plug 'ap/vim-css-color'             " Preview CSS colors in source code while editing.
  Plug 'ap/vim-buftabline'            " 'Forget Vim tabs – now you can have buffer tabs'.
  Plug 'tpope/vim-fugitive'           " 'fugitive.vim: A Git wrapper so awesome, it should be illegal'.
  Plug 'tpope/vim-rhubarb'            " 'If fugitive.vim is the Git, rhubarb.vim is the Hub'.
  Plug 'chriskempson/base16-vim'
  "Plug 'xolox/vim-session'            " Extended session management. Adds :{Open,Close,Delete}Session cmds.
  "Plug 'xolox/vim-misc'               " Required by xolox/vim-session.
  "Plug 'mileszs/ack.vim'              " 'Run your favorite search tool from Vim, with an enhanced results list'. Provides :Ack, :AckAdd, :LAck and :LAckAdd.
  "Plug 'skwp/greplace.vim'            " 'Global search and replace for VI'. Provides :Gsearch and :Greplace.
  "Plug 'neoclide/coc.nvim', {'branch': 'release'} " Nodejs extension host for vim & neovim, load extensions like VSCode and host language servers.
  "Plug 'tacahiroy/ctrlp-funky'        " 'A super simple function navigator for ctrlp.vim'.
  "Plug 'maralla/completor.vim'        " 'Completor is an asynchronous code completion framework for vim8'.
  "Plug 'majutsushi/tagbar'            " Vim plugin that displays tags in a window, ordered by scope. Use with :TagbarToggle.
  "Plug 'mbbill/undotree'              " Undo tree visualizer (:UndotreeToggle).
  "Plug 'airblade/vim-gitgutter'
call plug#end()


" ------
" Basics
" ------

let mapleader = ","

filetype plugin indent on

syntax on

set autoread hidden nobackup nowritebackup noswapfile modeline
set fileformats=unix,dos,mac encoding=utf-8 fileencoding=utf-8
set clipboard=unnamed
set report=0
set shortmess=aAIc
set incsearch
set number relativenumber
set viminfo='100,<100,s10,h

set noerrorbells vb t_vb=             " Use visual bells instead of sound.
set whichwrap+=<,>,[,]                " Cursor keys move to prev/next lines too.
set gdefault                          " Default to replacing all ocurrences when searching & replacing.
set incsearch ignorecase smartcase    " Incremental search. Ignore case when searching, except if not all pattern is lowercase.
set showmatch                         " Show matching brackets.

set cursorline              " Highlight current line.
" set colorcolumn=+1
set noshowmode showcmd      " Last line: don't show current mode + show incomplete commands.
set scrolloff=5             " Always show some lines of context around the cursor.
set laststatus=2            " Always show status line.
set statusline=\ [%{mode()}]\ %.80f\ %h%m%r%w%=\|\%{strlen(&ft)?&ft:'?'}\ \|\%{strlen(&fenc)?&fenc:&enc}\ (%{&fileformat})\|\ %-8(%l:%c%)

set list listchars=tab:\›\ ,trail:· " Display tabs and trailing spaces.

set foldmethod=indent foldlevel=99 foldnestmax=4

" Enable persistent undo.
if has("persistent_undo")
    set undofile undodir=~/.vim-undodir/
endif

set nostartofline
set nowrap textwidth=120

set autoindent copyindent
set tabstop=4 softtabstop=4 shiftwidth=4
set expandtab smarttab

set formatoptions+=n " Recognize numbered lists.
set formatoptions-=t " Do not break lines at textwidth col.

set backspace=indent,eol,start " Backspace over everything.

set completeopt=menu,menuone,noinsert " Insert mode autocomplete.

set wildmenu wildmode=longest:full " Use wild menu for tab-completion.
set wildmode=longest:full
set wildignore+=.DS_Store,*/node_modules/*,*/vendors/*,*/.site/*,*.min.css,*.min.js,*.mo

" Use treeview for NetRW by default.
let g:netrw_liststyle=3

" Use rg.
set grepprg=rg\ --vimgrep\ --no-heading\ --smart-case


" --------
" Commands
" --------

augroup editing
  " When editing a file, always jump to the last cursor position.
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
augroup end

augroup makeprg
  au FileType php setl makeprg=php\ %
  au FileType python setl makeprg=python\ %
  au FileType ruby setl makeprg=ruby\ %
augroup end

augroup syntax
" au FileType python setl omnifunc=pythoncomplete#Complete
" au FileType php setl omnifunc=phpcomplete#CompletePHP makeprg=php\ %
" au FileType ruby setl makeprg=ruby\ %
augroup end

augroup vimconf
  au!
  au BufWritePost vimrc so %
augroup end

" Command to remove trailing spaces.
command! RemoveTrailingWhitespace :%s/\s\+$//e


" -------------
" Plugin config
" -------------
source ~/.vim/plugins.vim


" --------
" Mappings
" --------
source ~/.vim/map.vim
